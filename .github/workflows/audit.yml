name: Audit & Deploy

on:
  push:
    branches: [main]
    tags:
      - 'v*'

jobs:
  audit:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.20.4

    - name: Verify dependencies
      run: go mod verify

    - name: Build
      run: go build -o main cmd/main.go

    - name: Run go vet
      run: go vet ./...

    - name: Install staticcheck
      run: go install honnef.co/go/tools/cmd/staticcheck@latest

    - name: Run staticcheck
      run: staticcheck ./...

    - name: Run Linter
      uses: dominikh/staticcheck-action@v1.2.0
      with:
        version: "2022.1.1"
        install-go: false
        cache-key: 1.18.1

    - name: Run tests
      run: go test -race -vet=off ./...
  deploy:
    runs-on: ubuntu-20.04
    needs: audit
    if: |
      startsWith(github.ref, 'refs/tags') && contains(github.event.head_commit.message, '[deploy]')
    steps:
      - name: Extract Version
        id: version_step
        run: |
          echo "##[set-output name=version;]VERSION=${GITHUB_REF#refs/tags/v}"
          echo "##[set-output name=version_tag;]your-docker-image-name:${GITHUB_REF#refs/tags/v}"
          echo "##[set-output name=latest_tag;]your-docker-image-name:latest"
      
      - name: Print Version
        run: |
          echo ${{ steps.version_step.outputs.version_tag }}
          echo ${{ steps.version_step.outputs.latest_tag }}

      # multiplatform image creation
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      # advanced image creation
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Prepare Reg Names
        id: read-docker-image-identifiers
        run: |
          echo VERSION_TAG=$(echo ${{ steps.version_step.outputs.version_tag }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV
          echo LATEST_TAG=$(echo ${{ steps.version_step.outputs.latest_tag }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: |
            ${{ env.VERSION_TAG }}
            ${{ env.LATEST_TAG }}
          build-args: |
            VERSION=${{ steps.version_step.outputs.version }}
